% Test slicing with summations.

val N := 100;

% Sum an array
func sum_array(val a[n], val n) is
  var r;
  var i;
{ r := 0
; for i:=0 to n-1 do r := r + a[i]
; return r
}

% Slice an array of length n into m sections of length n/m.
proc sum_slices(val a[n], val n, val m) is
  var i;
  var l;
{ l := n / m
; for i:=0 to m-1 do
  { printval(sum_array(a[l*i:l*(i+1)], l))
  ; printstr(" ")
  }
; println()
}

% Simple sliced traversals of a length 10 array.
proc main() is
  var a[N];
  var i;
{ for i := 0 to N-1 do a[i] := 1
; printvalln(sum_array(a, N))
; sum_slices(a, N, 1)
; sum_slices(a, N, 2)
; sum_slices(a, N, 3)
; sum_slices(a, N, 4)
; sum_slices(a, N, 5)
; sum_slices(a, N, 6)
; sum_slices(a, N, 7)
; sum_slices(a, N, 8)
; sum_slices(a, N, 9)
}

