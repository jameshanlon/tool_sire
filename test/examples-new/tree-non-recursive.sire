val D := 4;
val N := 1 << D;

func f(val v) is
  return v

func g(val u, val v) is
  return u + v

proc leaf(chanend c) is
  var v;
{ c ? v
; c ! f(v)
}

proc branch(chanend c, chanend left, chanend right) is
  var u;
  var v;
{ c ? v
; left ! v ; right ! v
; left ? u ; right ? v
; c ! g(u, v)
}

proc tree(chanend input) is
  chan c[2*N-1];
{
  { input ? v ; c[0] ! v} ||
  par i in [0 for N-1] do
    branch(c[i], c[2*i+1], c[2*i+2]) ||
  par i in [0 for N] do 
    leaf(c[N-1+i])
}

proc main() is
  chan c;
  var query;
  var result;
{ { c ! query ; c ? result } ||
  tree(c)
}

