val N is 4;

proc foo(val i, val j, chanend n, chanend s, chanend w, chanend e) is 
{ var u;
  var v;
  % Top left
  if (i = 0) and (j = 0)
  then
  { s ! 1;
    e ! 1;
    n ? u;
    w ? v;
    assert u = N;
    assert v = N
  }
  % Row 0
  else if i = 0
  then
  { s ! 1;
    n ? u;
    w ? v;
    e ! v + 1;
    assert u = N
  }
  % Column 0
  else if j = 0
  then
  { e ! 1;
    w ? u;
    n ? v;
    s ! v + 1;
    assert u = N
  }
  % Everything else
  else
  { n ? u;
    w ? v;
    s ! u + 1;
    e ! v + 1
  }
}

proc main() is
{ chan x[N*N];
  chan y[N*N];
  var i;
  var j;
  par i in [0 for N], j in [0 for N] do 
    foo(i, j, y[(j*N)+i], y[(j*N)+((i+1) rem N)],
              x[(i*N)+j], x[(i*N)+((j+1) rem N)])
}

