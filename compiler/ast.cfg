#-----------------------------------------------------------------
# Each entry is a Node sub-class name, listing the attributes
# and child nodes of the class:
#   <name>*     - a child node
#   <name>**    - a sequence of child nodes
#   <name>      - an attribute
#-----------------------------------------------------------------

# Program
Program:   [var_decls*, proc_decls*]

# Variable declarations
VarDecls:  [decl**]
VarDecl:   [form, type, name, expr*]

# Procedure declarations
ProcDecls: [decl**]
ProcDecl:  [type, name, formals*, var_decls*, stmt*]

# Formal parameters
Formals:   [params**]
Param:     [type, name]

# Statements
Skip:      []
Pcall:     [name, expr*]
Ass:       [left*, expr*]
In:        [left*, expr*]
Out:       [left*, expr*]
If:        [cond*, then_stmt*, else_stmt*]
While:     [cond*, stmt]
For:       [var*, init*, bound*, stmt*]
On:        [core*, pcall*]
Connect:   [left*, core*, dest*]
Aliases:   [left*, name*, expr*]
Return:    [expr*]
Seq:       [stmt**]
Par:       [stmt**]

# Expressions
ExprList:  [expr**]
Unary:     [op, elem*]
Binop:     [op, elem*, right*]

# Elements
Group:     [expr*]
Sub:       [name*, expr*]
Fcall:     [name*, args*]
Number:    [value]
Boolean:   [value]
String:    [value]
Char:      [value]
Id:        [value]
